{"ast":null,"code":"import _slicedToArray from \"/Users/anastasiia/Downloads/pxj4r3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useEventCallback } from '../utils';\nvar useTouchRipple = function useTouchRipple(props) {\n  var disabled = props.disabled,\n    disableFocusRipple = props.disableFocusRipple,\n    disableRipple = props.disableRipple,\n    disableTouchRipple = props.disableTouchRipple,\n    focusVisible = props.focusVisible,\n    rippleRef = props.rippleRef;\n  React.useEffect(function () {\n    if (focusVisible && !disableFocusRipple && !disableRipple) {\n      var _rippleRef$current;\n      (_rippleRef$current = rippleRef.current) == null ? void 0 : _rippleRef$current.pulsate();\n    }\n  }, [rippleRef, focusVisible, disableFocusRipple, disableRipple]);\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      eventCallback == null ? void 0 : eventCallback(event);\n      if (!skipRippleAction && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    if (!disableFocusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, function () {\n        var _rippleRef$current2;\n        rippleRef == null ? void 0 : (_rippleRef$current2 = rippleRef.current) == null ? void 0 : _rippleRef$current2.start(event);\n      });\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (!disableFocusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, function () {\n        var _rippleRef$current3;\n        rippleRef == null ? void 0 : (_rippleRef$current3 = rippleRef.current) == null ? void 0 : _rippleRef$current3.pulsate(event);\n      });\n    }\n  });\n  var handleBlur = useRippleHandler('stop');\n  var handleMouseDown = useRippleHandler('start');\n  var handleContextMenu = useRippleHandler('stop');\n  var handleDragLeave = useRippleHandler('stop');\n  var handleMouseUp = useRippleHandler('stop');\n  var handleMouseLeave = useRippleHandler('stop');\n  var handleTouchStart = useRippleHandler('start');\n  var handleTouchEnd = useRippleHandler('stop');\n  var handleTouchMove = useRippleHandler('stop');\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mountedState = _React$useState2[0],\n    setMountedState = _React$useState2[1];\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n  var getRippleHandlers = React.useMemo(function () {\n    var rippleHandlers = {\n      onBlur: handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onContextMenu: handleContextMenu,\n      onDragLeave: handleDragLeave,\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n      onTouchMove: handleTouchMove\n    };\n    return function () {\n      var otherEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var eventNames = Object.keys(rippleHandlers);\n      var wrappedEvents = eventNames.map(function (eventName) {\n        return {\n          name: eventName,\n          handler: function handler(ev) {\n            var _otherEvents$eventNam;\n            (_otherEvents$eventNam = otherEvents[eventName]) == null ? void 0 : _otherEvents$eventNam.call(otherEvents, ev);\n            rippleHandlers[eventName](ev);\n          }\n        };\n      });\n      return wrappedEvents.reduce(function (acc, current) {\n        acc[current.name] = current.handler;\n        return acc;\n      }, {});\n    };\n  }, [handleBlur, handleKeyDown, handleKeyUp, handleMouseDown, handleMouseUp, handleMouseLeave, handleContextMenu, handleDragLeave, handleTouchStart, handleTouchEnd, handleTouchMove]);\n  return {\n    enableTouchRipple: enableTouchRipple,\n    getRippleHandlers: getRippleHandlers\n  };\n};\nexport default useTouchRipple;","map":{"version":3,"names":["React","useEventCallback","useTouchRipple","props","disabled","disableFocusRipple","disableRipple","disableTouchRipple","focusVisible","rippleRef","useEffect","_rippleRef$current","current","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","arguments","length","undefined","event","keydownRef","useRef","handleKeyDown","key","stop","_rippleRef$current2","start","handleKeyUp","defaultPrevented","_rippleRef$current3","handleBlur","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchEnd","handleTouchMove","_React$useState","useState","_React$useState2","_slicedToArray","mountedState","setMountedState","enableTouchRipple","getRippleHandlers","useMemo","rippleHandlers","onBlur","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onMouseLeave","onContextMenu","onDragLeave","onTouchStart","onTouchEnd","onTouchMove","otherEvents","eventNames","Object","keys","wrappedEvents","map","eventName","name","handler","ev","_otherEvents$eventNam","call","reduce","acc"],"sources":["/Users/anastasiia/Downloads/pxj4r3/node_modules/@mui/material/useTouchRipple/useTouchRipple.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '../utils';\n\nconst useTouchRipple = props => {\n  const {\n    disabled,\n    disableFocusRipple,\n    disableRipple,\n    disableTouchRipple,\n    focusVisible,\n    rippleRef\n  } = props;\n  React.useEffect(() => {\n    if (focusVisible && !disableFocusRipple && !disableRipple) {\n      var _rippleRef$current;\n\n      (_rippleRef$current = rippleRef.current) == null ? void 0 : _rippleRef$current.pulsate();\n    }\n  }, [rippleRef, focusVisible, disableFocusRipple, disableRipple]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      eventCallback == null ? void 0 : eventCallback(event);\n\n      if (!skipRippleAction && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    if (!disableFocusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        var _rippleRef$current2;\n\n        rippleRef == null ? void 0 : (_rippleRef$current2 = rippleRef.current) == null ? void 0 : _rippleRef$current2.start(event);\n      });\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (!disableFocusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        var _rippleRef$current3;\n\n        rippleRef == null ? void 0 : (_rippleRef$current3 = rippleRef.current) == null ? void 0 : _rippleRef$current3.pulsate(event);\n      });\n    }\n  });\n  const handleBlur = useRippleHandler('stop');\n  const handleMouseDown = useRippleHandler('start');\n  const handleContextMenu = useRippleHandler('stop');\n  const handleDragLeave = useRippleHandler('stop');\n  const handleMouseUp = useRippleHandler('stop');\n  const handleMouseLeave = useRippleHandler('stop');\n  const handleTouchStart = useRippleHandler('start');\n  const handleTouchEnd = useRippleHandler('stop');\n  const handleTouchMove = useRippleHandler('stop');\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  const getRippleHandlers = React.useMemo(() => {\n    const rippleHandlers = {\n      onBlur: handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      onContextMenu: handleContextMenu,\n      onDragLeave: handleDragLeave,\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n      onTouchMove: handleTouchMove\n    };\n    return (otherEvents = {}) => {\n      const eventNames = Object.keys(rippleHandlers);\n      const wrappedEvents = eventNames.map(eventName => ({\n        name: eventName,\n        handler: ev => {\n          var _otherEvents$eventNam;\n\n          (_otherEvents$eventNam = otherEvents[eventName]) == null ? void 0 : _otherEvents$eventNam.call(otherEvents, ev);\n          rippleHandlers[eventName](ev);\n        }\n      }));\n      return wrappedEvents.reduce((acc, current) => {\n        acc[current.name] = current.handler;\n        return acc;\n      }, {});\n    };\n  }, [handleBlur, handleKeyDown, handleKeyUp, handleMouseDown, handleMouseUp, handleMouseLeave, handleContextMenu, handleDragLeave, handleTouchStart, handleTouchEnd, handleTouchMove]);\n  return {\n    enableTouchRipple,\n    getRippleHandlers\n  };\n};\n\nexport default useTouchRipple;"],"mappings":"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"},"metadata":{},"sourceType":"module"}